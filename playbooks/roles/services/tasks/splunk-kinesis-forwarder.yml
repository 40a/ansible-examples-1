---
- name: Setup persistant volume stores
  docker: 
    username: "{{ docker_hub_username }}"
    password: "{{ docker_hub_password }}"
    email: "{{ docker_hub_email }}"
    name: "vsplunk"
    image: "{{ docker_image }}:{{ docker_tag }}"
    command: "/bin/true" 
    detach: False
    volumes: 
      - "/opt/splunk/etc"
      - "/opt/splunk/var"
     
- name: Pull Kinesis-enabled Splunk Forwarder and initialize
  docker: 
    name: "splunk"
    image: "{{ docker_image }}:{{ docker_tag }}"
    hostname: "{{ inventory_hostname }}"
    ports: "{{ splunk_port }}"
    restart_policy: "{{ docker_restart_policy }}"
    volumes_from: 
      - "vsplunk"
         
- name: Stop forwarder for further configuration
  docker:
    name: "splunk"
    image: "{{ docker_image }}:{{ docker_tag }}"
    state: "stopped"
     
- name: Create a directory containing forwarder configuration
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
    group: docker
  with_items:
    - /tmp/config/etc/system/local
    - /tmp/config/etc/apps
     
- name: Add Kinesis loader configuration
  template:
    src: templates/inputs.conf.j2
    dest: /tmp/config/etc/system/local/inputs.conf
    group: docker
     
- name: Copy over the base64 encoded Splunk Cloud configuration app
  copy: 
    content: "{{ splunk_cloud_cred_app }}"
    dest: "/tmp/config/cloudapp"
    group: docker
     
- name: Untar Splunk Cloud app
  shell: base64 -d /tmp/config/cloudapp | tar -C /tmp/config/etc/apps -xvz
       
- name: Tar up etc directory
  shell: tar -C /tmp/config -cvzf /tmp/config/config.tar.gz etc
     
- name: Untar data into docker volume
  docker:
    name: "extract"
    image: "{{ docker_image }}:{{ docker_tag }}"
    command: "tar -C /opt/splunk -xvzf /tmp/config/config.tar.gz"
    detach: False
    volumes:
      - "/tmp/config:/tmp/config"
    volumes_from: 
      - "vsplunk"
       
- name: Start configured Splunk
  docker: 
    name: "splunk"
    image: "{{ docker_image }}:{{ docker_tag }}"
    hostname: "{{ inventory_hostname }}"
    ports: "{{ splunk_port }}"
    restart_policy: "{{ docker_restart_policy }}"
    state: started
    volumes_from: 
      - "vsplunk"
     
- name: Cleanup
  file:
    path: /tmp/config
    state: absent
